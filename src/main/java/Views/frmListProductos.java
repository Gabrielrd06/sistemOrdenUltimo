/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Views;

import Controllers.MarcaJpaController;
import Controllers.ProductoJpaController;
import Entitys.Marca;
import Entitys.Producto;
import Views.Settings.ClaseJcombobox;
import Views.Settings.MT;
import Views.Settings.TableColumnAdjuster;
import Views.Settings.Ventana;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;

/**
 *
 * @author Gabriel
 */
public class frmListProductos extends Ventana {
    
    private static frmListProductos instancia;
    private Ventana padre;
    List<Producto> listaProductos = new ArrayList<>();

    /**
     * Creates new form frmListProductos
     */
    public frmListProductos() {
        initComponents();
    }
    
     public frmListProductos(Ventana padre) {
        initComponents();
        this.padre = padre;
        this.presentarDatos("CargarCombo");
        this.presentarDatos();  
    }
    
    public static frmListProductos getInstancia() {
        if (instancia == null) {
            instancia = new frmListProductos();
        }
        return instancia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxMarca = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductoList = new javax.swing.JTable();
        btnSeleccionar = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones Busqueda"));

        jLabel1.setText("Descripci√≥n:");

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyPressed(evt);
            }
        });

        jLabel2.setText("Marca:");

        jComboBoxMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jComboBoxMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMarcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista Productos"));

        jTableProductoList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableProductoList);

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(514, 514, 514))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMarcaActionPerformed
        // TODO add your handling code here:   
        while(this.listaProductos.size()>0)this.listaProductos.remove(0);
        if (jComboBoxMarca.getSelectedIndex() == 0) {
            this.presentarDatos();
        } else {
            ClaseJcombobox cjbxMarca = (ClaseJcombobox) jComboBoxMarca.getSelectedItem();
            Marca omarca = new Marca();
            omarca.setIdMarca(cjbxMarca.getTipoid());             
            listaProductos = controladorProducto.buscarXMarca(omarca);          
            this.presentarDatos("CargarTabla");
        } 
        
        
    }//GEN-LAST:event_jComboBoxMarcaActionPerformed

    private void txtDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyPressed
        // TODO add your handling code here:        
        if (!txtDescripcion.getText().equals("")) {
            while(this.listaProductos.size()>0)this.listaProductos.remove(0);
            this.listaProductos = controladorProducto.buscarXDescripcion(txtDescripcion.getText());
            this.presentarDatos("CargarTabla");
        } else {
            this.presentarDatos();
        }   
    }//GEN-LAST:event_txtDescripcionKeyPressed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        // TODO add your handling code here:
        int fila = jTableProductoList.getSelectedRow();
        if (fila != -1) {
            Producto p = (Producto) ((MT) jTableProductoList.getModel()).getSeleccion(fila);
            if (padre instanceof frmRegistroOrdenCompra) {this.padre.llenarCampos("Pedido", p);}
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox jComboBoxMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProductoList;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables

    ProductoJpaController controladorProducto = new ProductoJpaController();
    MarcaJpaController controladorMarca = new MarcaJpaController();
    
    @Override
    public void presentarDatos() {
        this.listaProductos = controladorProducto.findProductoEntities();
        Object[][] datos = new Object[listaProductos.size()][4];
        for (int i = 0; i < listaProductos.size(); i++) { 
            datos[i][0] = listaProductos.get(i).getIdMarca().getNombre();
            datos[i][1] = listaProductos.get(i).getDescripcion();
            datos[i][2] = listaProductos.get(i).getCodigo();
            datos[i][3] = listaProductos.get(i).getPrecioventa();
        }
        String[] columnas = {"Marca","Descripcion", "Codigo", "PrecioUnit."};
        jTableProductoList.setModel(new MT(columnas, datos, listaProductos));
        this.setAnchoColumnas();
    }

    @Override
    public void llenarCampos(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void presentarDatos(String opcion) {
        if(opcion.equals("CargarCombo")){
            List<Marca> listaMarcas = controladorMarca.findMarcaEntities();
            for (Marca listMarca1 : listaMarcas) {jComboBoxMarca.addItem(new ClaseJcombobox(listMarca1.getNombre(), listMarca1.getIdMarca()));}        
        }else if(opcion.equals("CargarTabla")){            
            Object[][] datos = new Object[listaProductos.size()][4];
            for (int i = 0; i < listaProductos.size(); i++) {
                datos[i][0] = listaProductos.get(i).getIdMarca().getNombre();
                datos[i][1] = listaProductos.get(i).getDescripcion();
                datos[i][2] = listaProductos.get(i).getCodigo();
                datos[i][3] = listaProductos.get(i).getPrecioventa();
            }
            String[] columnas = {"Marca", "Descripcion", "Codigo", "PrecioUnit."};
            jTableProductoList.setModel(new MT(columnas, datos, listaProductos));
            this.setAnchoColumnas();
        }
       
    }

    @Override
    public void llenarCampos(String opcion, Object objeto) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void limpiarFormulario() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void setAnchoColumnas(){        
        jTableProductoList.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(jTableProductoList);
        tca.adjustColumns();
        
    } 
}
